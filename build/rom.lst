000000 000F8000         	dc.l   $000F8000      ; Initial stack pointer value
000004 00000100         	dc.l   EntryPoint      ; Start of program
000008 000004C6         	dc.l   Exception       ; Bus error
00000C 000004C6         	dc.l   Exception       ; Address error
000010 000004C6         	dc.l   Exception       ; Illegal instruction
000014 000004C6         	dc.l   Exception       ; Division by zero
000018 000004C6         	dc.l   Exception       ; CHK exception
00001C 000004C6         	dc.l   Exception       ; TRAPV exception
000020 000004C6         	dc.l   Exception       ; Privilege violation
000024 000004C6         	dc.l   Exception       ; TRACE exception
000028 000004C6         	dc.l   Exception       ; Line-A emulator
00002C 000004C6         	dc.l   Exception       ; Line-F emulator
000030 000004C6         	dc.l   Exception       ; Unused (reserved)
000034 000004C6         	dc.l   Exception       ; Unused (reserved)
000038 000004C6         	dc.l   Exception       ; Unused (reserved)
00003C 000004C6         	dc.l   Exception       ; Unused (reserved)
000040 000004C6         	dc.l   Exception       ; Unused (reserved)
000044 000004C6         	dc.l   Exception       ; Unused (reserved)
000048 000004C6         	dc.l   Exception       ; Unused (reserved)
00004C 000004C6         	dc.l   Exception       ; Unused (reserved)
000050 000004C6         	dc.l   Exception       ; Unused (reserved)
000054 000004C6         	dc.l   Exception       ; Unused (reserved)
000058 000004C6         	dc.l   Exception       ; Unused (reserved)
00005C 000004C6         	dc.l   Exception       ; Unused (reserved)
000060 000004C6         	dc.l   Exception       ; Spurious exception
000064 000004C6         	dc.l   Exception       ; IRQ level 1
000068 000004C6         	dc.l   Exception       ; IRQ level 2
00006C 0000044A         	dc.l   DMAdone		   ; IRQ level 3 (DMA)
000070 000004C6         	dc.l   Exception       ; IRQ level 4
000074 000004C6         	dc.l   Exception       ; IRQ level 5
000078 000004C6         	dc.l   Exception       ; IRQ level 6
00007C 000004C6         	dc.l   Exception       ; IRQ level 7
000080 000004C8         	dc.l   ROMcall         ; TRAP #00 exception (ROM calls)
000084 000004C6         	dc.l   Exception       ; TRAP #01 exception
000088 000004C6         	dc.l   Exception       ; TRAP #02 exception
00008C 000004C6         	dc.l   Exception       ; TRAP #03 exception
000090 000004C6         	dc.l   Exception       ; TRAP #04 exception
000094 000004C6         	dc.l   Exception       ; TRAP #05 exception
000098 000004C6         	dc.l   Exception       ; TRAP #06 exception
00009C 000004C6         	dc.l   Exception       ; TRAP #07 exception
0000A0 000004C6         	dc.l   Exception       ; TRAP #08 exception
0000A4 000004C6         	dc.l   Exception       ; TRAP #09 exception
0000A8 000004C6         	dc.l   Exception       ; TRAP #10 exception
0000AC 000004C6         	dc.l   Exception       ; TRAP #11 exception
0000B0 000004C6         	dc.l   Exception       ; TRAP #12 exception
0000B4 000004C6         	dc.l   Exception       ; TRAP #13 exception
0000B8 000004C6         	dc.l   Exception       ; TRAP #14 exception
0000BC 000004C6         	dc.l   Exception       ; TRAP #15 exception
0000C0 000004C6         	dc.l   Exception       ; Unused (reserved)
0000C4 000004C6         	dc.l   Exception       ; Unused (reserved)
0000C8 000004C6         	dc.l   Exception       ; Unused (reserved)
0000CC 000004C6         	dc.l   Exception       ; Unused (reserved)
0000D0 000004C6         	dc.l   Exception       ; Unused (reserved)
0000D4 000004C6         	dc.l   Exception       ; Unused (reserved)
0000D8 000004C6         	dc.l   Exception       ; Unused (reserved)
0000DC 000004C6         	dc.l   Exception       ; Unused (reserved)
0000E0 000004C6         	dc.l   Exception       ; Unused (reserved)
0000E4 000004C6         	dc.l   Exception       ; Unused (reserved)
0000E8 000004C6         	dc.l   Exception       ; Unused (reserved)
0000EC 000004C6         	dc.l   Exception       ; Unused (reserved)
0000F0 000004C6         	dc.l   Exception       ; Unused (reserved)
0000F4 000004C6         	dc.l   Exception       ; Unused (reserved)
0000F8 000004C6         	dc.l   Exception       ; Unused (reserved)
0000FC 000004C6         	dc.l   Exception       ; Unused (reserved)


000100                  EntryPoint:           ; Entry point address set in ROM header

                        ; ************************************
                        ; Test reset button
                        ; ************************************
000100 4EF9 00000106        jmp Main
                        ; ************************************
                        ; Main
                        ; ************************************
000106                  Main:
000106 43F9 000005BD    	lea.l ver,a1
src/rom.asm:78: *** Warning:  Short branch could be used here ***
00010C 6100 007A        	bsr Printstring
000110 6100 0342        	bsr ClearIRQmask
000114 7C00             	moveq.l #0,d6
000116 223C 00000096    	move.l #150,d1
00011C 243C 00000069    	move.l #105,d2
000122 49F9 00000518    	lea.l tux,a4
000128                  loop:
000128 1614             	move.b (a4),d3
src/rom.asm:86: *** Warning:  Short branch could be used here ***
00012A 6100 006C        	bsr Drawscreen
00012E 528C             	addq.l #1,a4
000130 5281             	addq.l #1,d1
000132 0C41 00A5        	cmpi.w #165,d1
src/rom.asm:90: *** Warning:  Short branch could be used here ***
000136 6700 003C        	beq loop2
00013A 0C42 0073        	cmpi.w #115,d2
00013E 6FE8             	ble loop
000140 7200             	moveq.l #0,d1
000142 6100 00F0        	bsr Selectdisk
000146 227C 00000000    	move.l #$000000,a1
00014C 6100 00FA        	bsr Setaddressdisk
000150 7200             	moveq.l #$0,d1
000152 227C 00080001    	move.l #$80001,a1
000158 243C 0000FFFF    	move.l #$ffff,d2
00015E 6100 026C        	bsr ReadDMA
000162 43F9 000005E2    	lea.l pcdesc,a1
000168 207C 00080005    	move.l #$80005,a0
00016E 2450             	move.l (a0),a2
000170 204A             	move.l a2,a0
000172 4ED0             	jmp (a0)
000174                  loop2:
000174 5282             	addq.l #1,d2
000176 223C 00000096    	move.l #150,d1
00017C 4EF8 0128        	jmp loop

000180                  Printchar: ; d1 character
000180 307C 5000        	move.w #$5000,a0
000184 1081             	move.b d1,(a0)
000186 4E75             	rts

000188                  Printstring: ; a1 string address
000188 1211             	move.b (a1),d1
00018A 61F4             	bsr Printchar
00018C 2409             	move.l a1,d2
00018E 5202             	addq.b #1,d2
000190 2242             	move.l d2,a1
000192 4A11             	tst.b (a1)
000194 66F2             	bne Printstring
000196 4E75             	rts

000198                  Drawscreen: ; d1 x d2 y d3 color
000198 207C 00F00000    	move.l #$f00000,a0
00019E 227C 000FFFFF    	move.l #$0fffff,a1
0001A4 7E00             	moveq.l #0,d7
0001A6 1287             	move.b d7,(a1)
0001A8 283C 00000140    	move.l #320,d4
0001AE C8C2             	mulu.w d2,d4
0001B0 D881             	add.l d1,d4
0001B2 2A08             	move.l a0,d5
0001B4 D885             	add.l d5,d4
0001B6 2444             	move.l d4,a2
0001B8 1483             	move.b d3,(a2)
0001BA 4E75             	rts

0001BC                  Readtimer: ; d1 ret value
0001BC 207C 00F00000    	move.l #$f00000,a0
0001C2 227C 000FFFFF    	move.l #$0fffff,a1
0001C8 7E01             	moveq.l #1,d7
0001CA 1287             	move.b d7,(a1)
0001CC 1210             	move.b (a0),d1

0001CE                  Writetimer: ; d1 input value
0001CE 207C 00F00000    	move.l #$f00000,a0
0001D4 227C 000FFFFF    	move.l #$0fffff,a1
0001DA 7E01             	moveq.l #1,d7
0001DC 1287             	move.b d7,(a1)
0001DE 1081             	move.b d1,(a0)

0001E0                  itoa: ; d1 input value a1 string address d2 base
0001E0 0C41 0000        	cmpi #0,d1
src/rom.asm:156: *** Warning:  Short branch could be used here ***
0001E4 6600 0010        	bne itoamain
0001E8 2609             	move.l a1,d3
0001EA 163C 0030        	move.b #'0',d3
0001EE 5283             	addq.l #1,d3
0001F0 163C 0000        	move.b #0,d3
0001F4 4E75             	rts
0001F6                  itoamain:
0001F6 2F03             	move.l d3,-(sp)
0001F8 86C1             	divu d1,d3
0001FA 2803             	move.l d3,d4
0001FC E04B             	lsr #8,d3
0001FE E04B             	lsr #8,d3
000200 0284 0000FFFF    	andi.l #$ffff,d4
000206 3204             	move.w d4,d1
000208 0C43 0009        	cmpi.w #9,d3
src/rom.asm:171: *** Warning:  Short branch could be used here ***
00020C 6E00 000C        	bgt itoaadd
000210 D67C 0030        	add.w #'0',d3
000214 4EF9 00000222    	jmp itoacon
00021A                  itoaadd:
00021A 967C 000A        	sub.w #10,d3
00021E D67C 0061        	add.w #'a',d3
000222                  itoacon:
000222 2803             	move.l d3,d4
000224 225F             	move.l (sp)+,a1
000226 1284             	move.b d4,(a1)
000228 2609             	move.l a1,d3
00022A 5283             	addq.l #1,d3
00022C 0C41 0000        	cmpi #0,d1
000230 66C4             	bne itoamain
000232 4E75             	rts

000234                  Selectdisk: ; d1 disk selection (master-slave)
000234 207C 00F00005    	move.l #$f00005,a0
00023A 247C 000FFFFF    	move.l #$0fffff,a2
000240 7E02             	moveq.l #2,d7
000242 1487             	move.b d7,(a2)
000244 1081             	move.b d1,(a0)
000246 4E75             	rts

000248                  Setaddressdisk: ; a1 disk address
000248 207C 00F00000    	move.l #$f00000,a0
00024E 247C 000FFFFF    	move.l #$0fffff,a2
000254 7E02             	moveq.l #2,d7
000256 1487             	move.b d7,(a2)
000258 5288             	addq.l #1,a0
00025A 2C09             	move.l a1,d6
00025C 0286 000000FF    	andi.l #$ff,d6
000262 1086             	move.b d6,(a0)
000264 5288             	addq.l #1,a0
000266 2C09             	move.l a1,d6
000268 E08E             	lsr.l #8,d6
00026A 0286 000000FF    	andi.l #$ff,d6
000270 1086             	move.b d6,(a0)
000272 5288             	addq.l #1,a0
000274 2C09             	move.l a1,d6
000276 E08E             	lsr.l #8,d6
000278 E08E             	lsr.l #8,d6
00027A 0286 000000FF    	andi.l #$ff,d6
000280 1086             	move.b d6,(a0)
000282 5288             	addq.l #1,a0
000284 2C09             	move.l a1,d6
000286 E08E             	lsr.l #8,d6
000288 E08E             	lsr.l #8,d6
00028A E08E             	lsr.l #8,d6
00028C 0286 000000FF    	andi.l #$ff,d6
000292 1086             	move.b d6,(a0)
000294 5988             	subq.l #4,a0
000296 4E75             	rts

000298                  Writedisk: ; d1 data a1 disk address
000298 207C 00F00000    	move.l #$f00000,a0
00029E 247C 000FFFFF    	move.l #$0fffff,a2
0002A4 7E02             	moveq.l #2,d7
0002A6 1487             	move.b d7,(a2)
0002A8 5288             	addq.l #1,a0
0002AA 2C09             	move.l a1,d6
0002AC 0286 000000FF    	andi.l #$ff,d6
0002B2 1086             	move.b d6,(a0)
0002B4 5288             	addq.l #1,a0
0002B6 2C09             	move.l a1,d6
0002B8 E08E             	lsr.l #8,d6
0002BA 0286 000000FF    	andi.l #$ff,d6
0002C0 1086             	move.b d6,(a0)
0002C2 5288             	addq.l #1,a0
0002C4 2C09             	move.l a1,d6
0002C6 E08E             	lsr.l #8,d6
0002C8 E08E             	lsr.l #8,d6
0002CA 0286 000000FF    	andi.l #$ff,d6
0002D0 1086             	move.b d6,(a0)
0002D2 5288             	addq.l #1,a0
0002D4 2C09             	move.l a1,d6
0002D6 E08E             	lsr.l #8,d6
0002D8 E08E             	lsr.l #8,d6
0002DA E08E             	lsr.l #8,d6
0002DC 0286 000000FF    	andi.l #$ff,d6
0002E2 1086             	move.b d6,(a0)
0002E4 5988             	subq.l #4,a0
0002E6 1081             	move.b d1,(a0)
0002E8 4E75             	rts

0002EA                  Readdisk: ; d1 data a1 disk address
0002EA 207C 00F00000    	move.l #$f00000,a0
0002F0 247C 000FFFFF    	move.l #$0fffff,a2
0002F6 7E02             	moveq.l #2,d7
0002F8 1487             	move.b d7,(a2)
0002FA 5288             	addq.l #1,a0
0002FC 2C09             	move.l a1,d6
0002FE 0286 000000FF    	andi.l #$ff,d6
000304 1086             	move.b d6,(a0)
000306 5288             	addq.l #1,a0
000308 2C09             	move.l a1,d6
00030A E08E             	lsr.l #8,d6
00030C 0286 000000FF    	andi.l #$ff,d6
000312 1086             	move.b d6,(a0)
000314 5288             	addq.l #1,a0
000316 2C09             	move.l a1,d6
000318 E08E             	lsr.l #8,d6
00031A E08E             	lsr.l #8,d6
00031C 0286 000000FF    	andi.l #$ff,d6
000322 1086             	move.b d6,(a0)
000324 5288             	addq.l #1,a0
000326 2C09             	move.l a1,d6
000328 E08E             	lsr.l #8,d6
00032A E08E             	lsr.l #8,d6
00032C E08E             	lsr.l #8,d6
00032E 0286 000000FF    	andi.l #$ff,d6
000334 1086             	move.b d6,(a0)
000336 5988             	subq.l #4,a0
000338 1210             	move.b (a0),d1
00033A 4E75             	rts

00033C                  IsreadyDMA: ; d0 return value
00033C 207C 00F00008    	move.l #$f00008,a0
000342 247C 000FFFFF    	move.l #$0fffff,a2
000348 7E03             	moveq.l #3,d7
00034A 1487             	move.b d7,(a2)
00034C 1010             	move.b (a0),d0
00034E EE48             	lsr #7,d0
000350 4E75             	rts

000352                  WriteDMA: ; d1 DMA channel (0-4) a1 address from write d2 size
000352 61E8             	bsr IsreadyDMA
000354 4A40             	tst d0
000356 6700 00F0        	beq DMAret
00035A 207C 00F00000    	move.l #$f00000,a0
000360 247C 000FFFFF    	move.l #$0fffff,a2
000366 7E03             	moveq.l #3,d7
000368 1487             	move.b d7,(a2)
00036A 5288             	addq.l #1,a0
00036C 2C09             	move.l a1,d6
00036E 0286 000000FF    	andi.l #$ff,d6
000374 1086             	move.b d6,(a0)
000376 5288             	addq.l #1,a0
000378 2C09             	move.l a1,d6
00037A E08E             	lsr.l #8,d6
00037C 0286 000000FF    	andi.l #$ff,d6
000382 1086             	move.b d6,(a0)
000384 5288             	addq.l #1,a0
000386 2C09             	move.l a1,d6
000388 E08E             	lsr.l #8,d6
00038A E08E             	lsr.l #8,d6
00038C 0286 000000FF    	andi.l #$ff,d6
000392 1086             	move.b d6,(a0)
000394 5288             	addq.l #1,a0
000396 2C02             	move.l d2,d6
000398 E08E             	lsr.l #8,d6
00039A E08E             	lsr.l #8,d6
00039C E08E             	lsr.l #8,d6
00039E 0286 000000FF    	andi.l #$ff,d6
0003A4 1086             	move.b d6,(a0)
0003A6 5288             	addq.l #1,a0
0003A8 2C02             	move.l d2,d6
0003AA 0286 000000FF    	andi.l #$ff,d6
0003B0 1086             	move.b d6,(a0)
0003B2 5288             	addq.l #1,a0
0003B4 2C02             	move.l d2,d6
0003B6 E08E             	lsr.l #8,d6
0003B8 0286 000000FF    	andi.l #$ff,d6
0003BE 1086             	move.b d6,(a0)
0003C0 5288             	addq.l #1,a0
0003C2 1081             	move.b d1,(a0)
0003C4 5F88             	subq.l #7,a0
0003C6 10BC 0001        	move.b #1,(a0)
0003CA 4E75             	rts

0003CC                  ReadDMA: ; d1 DMA channel (0-4) a1 address from read d2 size
0003CC 6100 FF6E        	bsr IsreadyDMA
0003D0 4A40             	tst d0
src/rom.asm:344: *** Warning:  Short branch could be used here ***
0003D2 6700 0074        	beq DMAret
0003D6 207C 00F00000    	move.l #$f00000,a0
0003DC 247C 000FFFFF    	move.l #$0fffff,a2
0003E2 7E03             	moveq.l #3,d7
0003E4 1487             	move.b d7,(a2)
0003E6 5288             	addq.l #1,a0
0003E8 2C09             	move.l a1,d6
0003EA 0286 000000FF    	andi.l #$ff,d6
0003F0 1086             	move.b d6,(a0)
0003F2 5288             	addq.l #1,a0
0003F4 2C09             	move.l a1,d6
0003F6 E08E             	lsr.l #8,d6
0003F8 0286 000000FF    	andi.l #$ff,d6
0003FE 1086             	move.b d6,(a0)
000400 5288             	addq.l #1,a0
000402 2C09             	move.l a1,d6
000404 E08E             	lsr.l #8,d6
000406 E08E             	lsr.l #8,d6
000408 0286 000000FF    	andi.l #$ff,d6
00040E 1086             	move.b d6,(a0)
000410 5288             	addq.l #1,a0
000412 2C02             	move.l d2,d6
000414 E08E             	lsr.l #8,d6
000416 E08E             	lsr.l #8,d6
000418 E08E             	lsr.l #8,d6
00041A 0286 000000FF    	andi.l #$ff,d6
000420 1086             	move.b d6,(a0)
000422 5288             	addq.l #1,a0
000424 2C02             	move.l d2,d6
000426 0286 000000FF    	andi.l #$ff,d6
00042C 1086             	move.b d6,(a0)
00042E 5288             	addq.l #1,a0
000430 2C02             	move.l d2,d6
000432 E08E             	lsr.l #8,d6
000434 0286 000000FF    	andi.l #$ff,d6
00043A 1086             	move.b d6,(a0)
00043C 5288             	addq.l #1,a0
00043E 1081             	move.b d1,(a0)
000440 5F88             	subq.l #7,a0
000442 10BC 0000        	move.b #0,(a0)
000446 4E75             	rts

000448                  DMAret:
000448 4E75             	rts

00044A                  DMAdone:
00044A 6100 FEF0        	bsr IsreadyDMA
00044E 0C00 0080        	cmpi.b #$80,d0
000452 4E73             	rte

000454                  ClearIRQmask:
000454 207C 00F00000    	move.l #$f00000,a0
00045A 247C 000FFFFF    	move.l #$0fffff,a2
000460 7E04             	moveq.l #4,d7
000462 1487             	move.b d7,(a2)
000464 10BC 0000        	move.b #0,(a0)
000468 4E75             	rts

00046A                  SetIRQmask:
00046A 207C 00F00000    	move.l #$f00000,a0
000470 247C 000FFFFF    	move.l #$0fffff,a2
000476 7E04             	moveq.l #4,d7
000478 1487             	move.b d7,(a2)
00047A 10BC 00FF        	move.b #$ff,(a0)
00047E 4E75             	rts

000480                  SetIRQbit: ; d1 bits number (0 - 7)
000480 207C 00F00002    	move.l #$f00002,a0
000486 247C 000FFFFF    	move.l #$0fffff,a2
00048C 7E04             	moveq.l #4,d7
00048E 1487             	move.b d7,(a2)
000490 1010             	move.b (a0),d0
000492 8001             	or.b d1,d0
000494 1081             	move.b d1,(a0)
000496 4E75             	rts
                        	
000498                  ClearIRQbit: ; d1 bits number (0 - 7)
000498 207C 00F00002    	move.l #$f00002,a0
00049E 247C 000FFFFF    	move.l #$0fffff,a2
0004A4 7E04             	moveq.l #4,d7
0004A6 1487             	move.b d7,(a2)
0004A8 1010             	move.b (a0),d0
0004AA B301             	eor.b d1,d1
0004AC C001             	and.b d1,d0
0004AE 1081             	move.b d1,(a0)
0004B0 4E75             	rts

0004B2                  ReadKBkey: ; d1 return key
0004B2 207C 00F00000    	move.l #$f00000,a0
0004B8 247C 000FFFFF    	move.l #$0fffff,a2
0004BE 7E05             	moveq.l #5,d7
0004C0 1487             	move.b d7,(a2)
0004C2 1210             	move.b (a0),d1
0004C4 4E75             	rts

0004C6                  Exception:
0004C6 4E73             	rte

0004C8                  ROMcall: ; d7 syscall number
0004C8 0C07 0000        	cmpi.b #0,d7
0004CC 6100 FCB2        	bsr Printchar
0004D0 0C07 0001        	cmpi.b #1,d7
0004D4 6100 FCC2        	bsr Drawscreen
0004D8 0C07 0002        	cmpi.b #2,d7
0004DC 6100 FDBA        	bsr Writedisk
0004E0 0C07 0003        	cmpi.b #3,d7
0004E4 6100 FE04        	bsr Readdisk
0004E8 0C07 0004        	cmpi.b #4,d7
0004EC 6100 FD46        	bsr Selectdisk
0004F0 0C47 0005        	cmpi #5,d7
0004F4 6100 FD52        	bsr Setaddressdisk
0004F8 0C07 0006        	cmpi.b #6,d7
0004FC 6100 FE54        	bsr WriteDMA
000500 0C07 0007        	cmpi.b #7,d7
000504 6100 FEC6        	bsr ReadDMA
000508 0C07 0008        	cmpi.b #8,d7
00050C 61A4             	bsr ReadKBkey
00050E 0C07 0009        	cmpi.b #9,d7
000512 6100 FCA8        	bsr Readtimer
000516 4E73             	rte

000518                  tux:
000518 0000010100000000 	dc.b 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0
000520 00000001010000
000527 0001010101000000 	dc.b 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0
00052F 00000101010100
000536 0101010101010000 	dc.b 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1
00053E 00010101010101
000545 0101010101010000 	dc.b 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1
00054D 00010101010101
000554 0001010101010100 	dc.b 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0
00055C 01010101010100
000563 0000010101010101 	dc.b 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0
00056B 01010101010000
000572 0000000101010101 	dc.b 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0
00057A 01010101000000
000581 0000000001010101 	dc.b 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0
000589 01010100000000
000590 0000000000010101 	dc.b 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0
000598 01010000000000
00059F 0000000000000101 	dc.b 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0
0005A7 01000000000000
0005AE 0000000000000001 	dc.b 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0
0005B6 00000000000000
0005BD                  ver:
0005BD 524F4D2076657273 	dc.b "ROM version 0.02\n",0
0005C5 696F6E20302E3032
0005CD 0A00
0005CF                  exceptioncaught:
0005CF 457863657074696F 	dc.b "Exception caught!\n",0
0005D7 6E20636175676874
0005DF 210A00
0005E2                  pcdesc:
0005E2 6D36386B706300   	dc.b "m68kpc",0 ; computer model
0005E9 363830303000     	dc.b "68000",0 ; processor type
0005EF 00400000         	dc.l 4194304 ; mem size
0005F3 00005000         	dc.l $5000 ; debug UART address
0005F7 01               	dc.b 1 ; dma present
0005F8 01               	dc.b 1 ; hard disks present
0005F9 00               	dc.b 0 ; floppy present
0005FA 01               	dc.b 1 ; keyboard present
0005FB 01               	dc.b 1 ; screen present
0005FC 01               	dc.b 1 ; timer present

CLEARIRQBIT        00000498    CLEARIRQMASK       00000454    DMADONE            0000044A
DMARET             00000448    DRAWSCREEN         00000198    ENTRYPOINT         00000100
EXCEPTION          000004C6    EXCEPTIONCAUGHT    000005CF    ISREADYDMA         0000033C
ITOA               000001E0    ITOAADD            0000021A    ITOACON            00000222
ITOAMAIN           000001F6    LOOP               00000128    LOOP2              00000174
MAIN               00000106    PCDESC             000005E2    PRINTCHAR          00000180
PRINTSTRING        00000188    READDISK           000002EA    READDMA            000003CC
READKBKEY          000004B2    READTIMER          000001BC    ROMCALL            000004C8
SELECTDISK         00000234    SETADDRESSDISK     00000248    SETIRQBIT          00000480
SETIRQMASK         0000046A    TUX                00000518    VER                000005BD
WRITEDISK          00000298    WRITEDMA           00000352    WRITETIMER         000001CE
